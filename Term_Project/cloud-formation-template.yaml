AWSTemplateFormatVersion: "2010-09-09"

Parameters: 
  ApiName:
    Type: String
    Description: Name of the HTTP API

Resources:
  GroceryDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GroceryData
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: grocery_id
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
        - AttributeName: grocery_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  UserDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserData
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5  

  GroceryAddLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GroceryAdd
      Handler: index.handler 
      Role: arn:aws:iam::579043522960:role/LabRole 
      Runtime: nodejs20.x  
      Timeout: 60  
      Code:
        S3Bucket: code-b00934576
        S3Key: grocery-add.zip 

  GroceryAddLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GroceryAddLambda.Arn
      Principal: apigateway.amazonaws.com 

  GroceryGetLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GroceryGet
      Handler: index.handler
      Role: arn:aws:iam::579043522960:role/LabRole
      Runtime: nodejs20.x
      Timeout: 60
      Code: 
        S3Bucket: code-b00934576
        S3Key: grocery-get.zip
  
  GroceryGetLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GroceryGetLambda.Arn
      Principal: apigateway.amazonaws.com 
        
  GroceryEditLambda:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: GroceryEdit
      Handler: index.handler
      Role: arn:aws:iam::579043522960:role/LabRole
      Runtime: nodejs20.x
      Timeout: 60
      Code: 
        S3Bucket: code-b00934576
        S3Key: grocery-edit.zip

  GroceryEditLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GroceryEditLambda.Arn
      Principal: apigateway.amazonaws.com 

  GroceryDeleteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GroceryDelete
      Handler: index.handler
      Role: arn:aws:iam::579043522960:role/LabRole
      Runtime: nodejs20.x
      Timeout: 60
      Code:
        S3Bucket: code-b00934576
        S3Key: grocery-delete.zip

  GroceryDeleteLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GroceryDeleteLambda.Arn
      Principal: apigateway.amazonaws.com 

  UserAddLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UserAdd
      Handler: index.handler 
      Role: arn:aws:iam::579043522960:role/LabRole 
      Runtime: nodejs20.x  
      Timeout: 60  
      Code:
        S3Bucket: code-b00934576
        S3Key: user-add.zip  
  
  UserAddLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt UserAddLambda.Arn
      Principal: apigateway.amazonaws.com

  UserGetByEmailLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UserGetByEmail
      Handler: index.handler
      Role: arn:aws:iam::579043522960:role/LabRole
      Runtime: nodejs20.x
      Timeout: 60
      Code: 
        S3Bucket: code-b00934576
        S3Key: user-get-by-email.zip

  UserGetByEmailLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt UserGetByEmailLambda.Arn
      Principal: apigateway.amazonaws.com
        
  # UserEditLambda:
  #   Type: AWS::Lambda::Function
  #   Properties: 
  #     FunctionName: UserEdit
  #     Handler: index.handler
  #     Role: arn:aws:iam::579043522960:role/LabRole
  #     Runtime: nodejs20.x
  #     Timeout: 60
  #     Code: 
  #       S3Bucket: code-b00934576
  #       S3Key: user-edit.zip

  UserDeleteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UserDelete
      Handler: index.handler
      Role: arn:aws:iam::579043522960:role/LabRole
      Runtime: nodejs20.x
      Timeout: 60
      Code:
        S3Bucket: code-b00934576
        S3Key: user-delete.zip
  
  UserDeleteLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt UserDeleteLambda.Arn
      Principal: apigateway.amazonaws.com

  ProjectApi:
    Type: AWS::ApiGatewayV2::Api
    Properties: 
      Name: !Ref ApiName
      ProtocolType: HTTP
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
        AllowHeaders:
          - '*'
        AllowOrigins:
          - '*'
        ExposeHeaders:
          - '*'

  DefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ProjectApi
      AutoDeploy: true
      StageName: default

  UserGetByEmailIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt UserGetByEmailLambda.Arn

  UserGetByEmailRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "GET /users/{email}"
      AuthorizationType: NONE
      Target: !Sub "integrations/${UserGetByEmailIntegration}"

  UserAddIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt UserAddLambda.Arn

  UserAddRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "PUT /users"
      AuthorizationType: NONE
      Target: !Sub "integrations/${UserAddIntegration}"

  UserDeleteIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt UserDeleteLambda.Arn

  UserDeleteRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties: 
      ApiId: !Ref ProjectApi
      RouteKey: "DELETE /users/{email}"
      AuthorizationType: NONE
      Target: !Sub "integrations/${UserDeleteIntegration}"

  GroceryGetIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt GroceryGetLambda.Arn

  GroceryGetRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "GET /grocery/{email}"
      AuthorizationType: NONE
      Target: !Sub "integrations/${GroceryGetIntegration}"

  GroceryAddIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt GroceryAddLambda.Arn

  GroceryAddRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "POST /grocery"
      AuthorizationType: NONE
      Target: !Sub "integrations/${GroceryAddIntegration}"

  GroceryEditIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt GroceryEditLambda.Arn

  GroceryEditRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "PUT /grocery"
      AuthorizationType: NONE
      Target: !Sub "integrations/${GroceryEditIntegration}"

  GroceryDeleteIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ProjectApi
      Description: Lambda proxy integration
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt GroceryDeleteLambda.Arn

  GroceryDeleteRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ProjectApi
      RouteKey: "DELETE /grocery/{email}"
      AuthorizationType: NONE
      Target: !Sub "integrations/${GroceryDeleteIntegration}"


  